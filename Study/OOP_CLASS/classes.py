class Point3D:
    x=1
    y=1
    z=1

class Point:
    "Класс для представления кординатов точек на плоскости" # описание класса
    x=1
    y=1

print(Point.__doc__) # ИмяКласса.__doc__ -- описание класса
print(Point.__name__) # ИмяКласса.__name__ -- Имя класса
print(dir(Point)) # dir(ИмяКласса) -- все переменные ( аргументы класса)

pt = Point() # ИмяКласса() --  Создает экземпляр класса

# Класс похватывает все аргументы родительского класса

Point.x = 100 # ИмяКласса.x -- изменяет значение аргумента(переменной)

print(pt.x,pt.y) # ЭкземплярКласса.х -- меняется значение переменной

print(Point.x,Point.y) # Тоже меняется

print(" ЛОКАЛЬНЫХ ПЕРИМЕННЫХ НЕТ :", pt.__dict__)

pt.x = 50 #  ЭкземплярКласса.x -- изменяет значение аргумента(переменной) # Связь с родительским аргументом проподает

pt.y = 150 #  ЭкземплярКласса.y -- изменяет значение аргумента(переменной) # Связь с родительским аргументом проподает

print(pt.x,pt.y) # ЭкземплярКласса.х -- меняется значение переменной больше не связан с Point

print(Point.x,Point.y) # значения не поменялось

print(pt.__dict__) # ЭкземплярКласса.__dict__ -- Узнать локальные переменные этого класса (без привязки к родителю)

# переменные в ООП имеют название атрибуты(свойства)

print(getattr(pt, "x")) # -- ЭкземплярКласса, "имя атрибута"  -- возвращает значение атрибута обьекта
print(getattr(pt, "z",False))# -- ЭкземплярКласса, "имя атрибута", если атрибут отсутсвует (устранение ошибки) - возвращает значение атрибута обьекта

print(hasattr(pt, "y"))#-- ЭкземплярКласса, "имя атрибута" -- возвращает существует ли атрибут у обьекта
print(hasattr(pt, "z"))#-- ЭкземплярКласса, "имя атрибута" -- возвращает существует ли атрибут у обьекта
setattr(pt, "z",7) #   ЭкземплярКласса, "атрибут", значение -- проверяет если атрибут , если нет добовляет значение
print(pt.__dict__)
delattr(pt, "z") # ЭкземплярКласса, "атрибут" -- удаляет атрибут
print(pt.__dict__)
print(isinstance(pt, Point)) # ЭкземплярКласса , БазовыйКласс(Родитель) -- проверяет является ли экземпляр ребенком базового класса
print(isinstance(pt, Point3D)) # ЭкземплярКласса , БазовыйКласс(Родитель) -- проверяет является ли экземпляр ребенком базового класса

Point.z = 100
pt.msg = "Hello"
del pt.x


#Задание

print("\nЗадание\n")

p3d = Point3D()

p3d_2 = Point3D()

p3d_3 = Point3D()

print(p3d.x,p3d.y,p3d.z)
print(p3d_2.x,p3d.y,p3d.z)
print(p3d_3.x,p3d.y,p3d.z)

setattr(Point3D,"z",10)

print(p3d.x,p3d.y,p3d.z)
print(p3d_2.x,p3d.y,p3d.z)
print(p3d_3.x,p3d.y,p3d.z)

delattr(Point3D,"z")

print((getattr(p3d, "x",False)),(getattr(p3d, "y",False)),(getattr(p3d, "z",False)))
print((getattr(p3d_2, "x",False)),(getattr(p3d_2, "y",False)),(getattr(p3d_2, "z",False)))
print((getattr(p3d_3, "x",False)),(getattr(p3d_3, "y",False)),(getattr(p3d_3, "z",False)))

setattr(p3d_2,"y",10)

print((getattr(p3d, "x",False)),(getattr(p3d, "y",False)),(getattr(p3d, "z",False)))
print((getattr(p3d_2, "x",False)),(getattr(p3d_2, "y",False)),(getattr(p3d_2, "z",False)))
print((getattr(p3d_3, "x",False)),(getattr(p3d_3, "y",False)),(getattr(p3d_3, "z",False)))